// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum UserRole {
  MANAGER
  CUSTOMER
}

model User {
  id             String   @id @default(auto()) @map("_id") @db.ObjectId
  email          String   @unique
  hashedPassword String
  age            Int
  role           UserRole @default(CUSTOMER)
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  Ticket         Ticket[]
}

model Movie {
  id             String    @id @default(auto()) @map("_id") @db.ObjectId
  name           String    @unique
  ageRestriction Int
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  Session        Session[]
}

model Session {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  movieId   String   @db.ObjectId
  movie     Movie    @relation(fields: [movieId], references: [id], onDelete: Cascade)
  startAt   DateTime
  endAt     DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Ticket    Ticket[]
}

model Ticket {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  sessionId  String   @db.ObjectId
  session    Session  @relation(fields: [sessionId], references: [id], onDelete: Cascade)
  userId     String   @db.ObjectId
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  hasWatched Boolean
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}
